name: ZAP API test

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  zap_full_scan:
    runs-on: ubuntu-latest
    name: OWASP ZAP Full Scan
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: ZAP Full Scan 
        id: zap_full_scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://knowledge.dev.demo.catena-x.net'  # Please specify the target URL to be scanned
        env:
          ZAP_REPORT_DIR: ${{ github.workspace }}/zap-full-scan-results
          
      - name: Save output variables
        id: save_zap_full_scan_output
        run: echo "zap-full-scan-results=$ID" >> $GITHUB_OUTPUT

  zap_api_scan:
    runs-on: ubuntu-latest
    name: OWASP ZAP API Scan
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - name: API Test 1
        id: api_test_1
        run: |
          # Perform API Test 1 and capture the response
          response=$(curl -w "%{http_code}" -v GET https://knowledge.dev.demo.catena-x.net --user "${{ secrets.BASIC_AUTH_USER }}:${{ secrets.BASIC_AUTH_PASSWORD }}")
          echo "Response: $response"
      - name: API Test 2
        id: api_test_2
        run: |
          # Perform API Test 2 and capture the response
          response=$(curl -w "%{http_code}" -X GET https://knowledge.dev.demo.catena-x.net --header "Authorization: Basic ${{ secrets.BASIC_AUTH_TOKEN }}")
          echo "Response: $response"
          
      - name: API Test 3
        id: api_test_3
        run: |
          # Perform API Test 3 and capture the response
          response=$(curl -X GET https://knowledge.dev.demo.catena-x.net --header "X-Api-Key: ${{ secrets.API_KEY }}")
          echo "Response: $response"
          
      - name: API Test 4
        id: api_test_4
        run: |
          # Perform API Test 4 and capture the response
          response=$(curl -X GET https://knowledge.dev.demo.catena-x.net --header "Authorization: Bearer ${{ secrets.OAUTH2 }}")
          echo "Response: $response"
          
      - name: ZAP API Scan
        id: zap_api_scan
        uses: zaproxy/action-api-scan@v0.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          format: openapi
          target: 'https://knowledge.dev.demo.catena-x.net'
        env:
          ZAP_REPORT_DIR: ${{ github.workspace }}/zap-api-scan-results

      - name: Save output variables
        id: save_zap_api_scan_output
        run: echo "zap-api-scan-results=$ID" >> $GITHUB_OUTPUT

  analyze_results:
    needs: [zap_full_scan, zap_api_scan]
    runs-on: ubuntu-latest
    steps:
      - env:
          OUTPUT1: ${{needs.zap_full_scan.outputs.zap-full-scan-results}}
          OUTPUT2: ${{needs.zap_api_scan.outputs.zap-api-scan-results}}
        run: echo "$OUTPUT1 $OUTPUT2"



